%CMF
# %PSECTS Section
# For each object file, details of its psects are enumerated here.
# The begining of the section is indicated by %PSECTS.  The first
# line indicates the name of the first object file, e.g.
#    $foo.obj
# Each line that follows describes a psect in that object file, until
# the next object file.  The lines that describe a psect have the
# format:
#    <psect name> <class name> <space> <link address> <load addresses> <length> <delta> <reloc>
# All addresses and the length are given in unqualified hexadecimal
# in delta units.  Any other numeric values are decimal.
%PSECTS
$main.obj
cinit CODE 0 786 786 2A 1 2
text0 CODE 0 602 602 94 1 2
text1 CODE 0 718 718 6E 1 2
text2 CODE 0 696 696 82 1 2
nvCOMRAM COMRAM 1 1E 1E 2 1 1
idataCOMRAM CODE 0 7B0 7B0 14 1 1
cstackCOMRAM COMRAM 1 15 15 9 1 1
smallconst SMALLCONST 0 600 600 2 1 2
dataCOMRAM COMRAM 1 1 1 14 1 1
bssCOMRAM COMRAM 1 20 20 2 1 1
config CONFIG 4 300000 300000 2 1 1
$startup.obj
init CODE 0 0 0 4 1 2
config CONFIG 4 300000 300000 2 1 1
# %UNUSED Section
# This section enumerates the unused ranges of each CLASS. Each entry
# is described on a single line as follows:
#    <class name> <range> <delta>
# Addresses given in the range are in hexadecimal and units of delta.
%UNUSED
RAM 60-5FF 1
SFR D00-FFF 1
BANK0 60-FF 1
BANK1 100-1FF 1
BANK2 200-2FF 1
BANK3 300-3FF 1
BANK4 400-4FF 1
BANK5 500-5FF 1
CONST 4-5FF 1
CONST 7C4-7FFF 1
IDLOC 200000-200007 1
SMALLCONST 7C4-7FFF 1
CODE 4-5FF 1
CODE 7C4-7FFF 1
BIGRAM 22-5FF 1
BIGSFR D00-FFF 1
COMRAM 22-5F 1
CONFIG 300002-30000D 1
EEDATA F00000-F000FF 1
MEDIUMCONST 7C4-7FFF 1
# %LINETAB Section
# This section enumerates the file/line to address mappings.
# The beginning of the section is indicated by %LINETAB.
# The first line indicates the name of the first object file, e.g.
#   $foo.obj
# Each line that follows describes a single mapping until the next
# object file.  Mappings have the following format:
#    <address> <psect name> <class name> ><line number>:<file name>
# The address is absolute and given given in unqualified hex 
# in delta units of the psect. All mappings within an object file
# are in ascending order of addresses.
# All other numeric values are in decimal.
%LINETAB
$main.obj
696 text2 CODE >7:C:\Program Files\Microchip\xc8\v2.50\pic\sources\c90\common\awdiv.c
696 text2 CODE >13:C:\Program Files\Microchip\xc8\v2.50\pic\sources\c90\common\awdiv.c
698 text2 CODE >14:C:\Program Files\Microchip\xc8\v2.50\pic\sources\c90\common\awdiv.c
69C text2 CODE >15:C:\Program Files\Microchip\xc8\v2.50\pic\sources\c90\common\awdiv.c
6A4 text2 CODE >16:C:\Program Files\Microchip\xc8\v2.50\pic\sources\c90\common\awdiv.c
6A8 text2 CODE >18:C:\Program Files\Microchip\xc8\v2.50\pic\sources\c90\common\awdiv.c
6AC text2 CODE >19:C:\Program Files\Microchip\xc8\v2.50\pic\sources\c90\common\awdiv.c
6B4 text2 CODE >20:C:\Program Files\Microchip\xc8\v2.50\pic\sources\c90\common\awdiv.c
6B8 text2 CODE >22:C:\Program Files\Microchip\xc8\v2.50\pic\sources\c90\common\awdiv.c
6C0 text2 CODE >23:C:\Program Files\Microchip\xc8\v2.50\pic\sources\c90\common\awdiv.c
6C8 text2 CODE >24:C:\Program Files\Microchip\xc8\v2.50\pic\sources\c90\common\awdiv.c
6CC text2 CODE >25:C:\Program Files\Microchip\xc8\v2.50\pic\sources\c90\common\awdiv.c
6CE text2 CODE >26:C:\Program Files\Microchip\xc8\v2.50\pic\sources\c90\common\awdiv.c
6D4 text2 CODE >27:C:\Program Files\Microchip\xc8\v2.50\pic\sources\c90\common\awdiv.c
6D6 text2 CODE >25:C:\Program Files\Microchip\xc8\v2.50\pic\sources\c90\common\awdiv.c
6DA text2 CODE >30:C:\Program Files\Microchip\xc8\v2.50\pic\sources\c90\common\awdiv.c
6E0 text2 CODE >31:C:\Program Files\Microchip\xc8\v2.50\pic\sources\c90\common\awdiv.c
6EC text2 CODE >32:C:\Program Files\Microchip\xc8\v2.50\pic\sources\c90\common\awdiv.c
6F4 text2 CODE >33:C:\Program Files\Microchip\xc8\v2.50\pic\sources\c90\common\awdiv.c
6F6 text2 CODE >35:C:\Program Files\Microchip\xc8\v2.50\pic\sources\c90\common\awdiv.c
6FC text2 CODE >36:C:\Program Files\Microchip\xc8\v2.50\pic\sources\c90\common\awdiv.c
700 text2 CODE >38:C:\Program Files\Microchip\xc8\v2.50\pic\sources\c90\common\awdiv.c
706 text2 CODE >39:C:\Program Files\Microchip\xc8\v2.50\pic\sources\c90\common\awdiv.c
70E text2 CODE >40:C:\Program Files\Microchip\xc8\v2.50\pic\sources\c90\common\awdiv.c
716 text2 CODE >41:C:\Program Files\Microchip\xc8\v2.50\pic\sources\c90\common\awdiv.c
718 text1 CODE >7:C:\Program Files\Microchip\xc8\v2.50\pic\sources\c90\common\awmod.c
718 text1 CODE >12:C:\Program Files\Microchip\xc8\v2.50\pic\sources\c90\common\awmod.c
71A text1 CODE >13:C:\Program Files\Microchip\xc8\v2.50\pic\sources\c90\common\awmod.c
71E text1 CODE >14:C:\Program Files\Microchip\xc8\v2.50\pic\sources\c90\common\awmod.c
726 text1 CODE >15:C:\Program Files\Microchip\xc8\v2.50\pic\sources\c90\common\awmod.c
72A text1 CODE >17:C:\Program Files\Microchip\xc8\v2.50\pic\sources\c90\common\awmod.c
72E text1 CODE >18:C:\Program Files\Microchip\xc8\v2.50\pic\sources\c90\common\awmod.c
736 text1 CODE >19:C:\Program Files\Microchip\xc8\v2.50\pic\sources\c90\common\awmod.c
73E text1 CODE >20:C:\Program Files\Microchip\xc8\v2.50\pic\sources\c90\common\awmod.c
742 text1 CODE >21:C:\Program Files\Microchip\xc8\v2.50\pic\sources\c90\common\awmod.c
744 text1 CODE >22:C:\Program Files\Microchip\xc8\v2.50\pic\sources\c90\common\awmod.c
74A text1 CODE >23:C:\Program Files\Microchip\xc8\v2.50\pic\sources\c90\common\awmod.c
74C text1 CODE >21:C:\Program Files\Microchip\xc8\v2.50\pic\sources\c90\common\awmod.c
750 text1 CODE >26:C:\Program Files\Microchip\xc8\v2.50\pic\sources\c90\common\awmod.c
75C text1 CODE >27:C:\Program Files\Microchip\xc8\v2.50\pic\sources\c90\common\awmod.c
764 text1 CODE >28:C:\Program Files\Microchip\xc8\v2.50\pic\sources\c90\common\awmod.c
76A text1 CODE >29:C:\Program Files\Microchip\xc8\v2.50\pic\sources\c90\common\awmod.c
76E text1 CODE >31:C:\Program Files\Microchip\xc8\v2.50\pic\sources\c90\common\awmod.c
774 text1 CODE >32:C:\Program Files\Microchip\xc8\v2.50\pic\sources\c90\common\awmod.c
77C text1 CODE >33:C:\Program Files\Microchip\xc8\v2.50\pic\sources\c90\common\awmod.c
784 text1 CODE >34:C:\Program Files\Microchip\xc8\v2.50\pic\sources\c90\common\awmod.c
602 text0 CODE >12:D:\Micro_controllers\PIC18F4580\Micro-Controller-PIC18f4580-\4.Interfacing with Displays\7 segment display\main.c
602 text0 CODE >14:D:\Micro_controllers\PIC18F4580\Micro-Controller-PIC18f4580-\4.Interfacing with Displays\7 segment display\main.c
604 text0 CODE >15:D:\Micro_controllers\PIC18F4580\Micro-Controller-PIC18f4580-\4.Interfacing with Displays\7 segment display\main.c
606 text0 CODE >23:D:\Micro_controllers\PIC18F4580\Micro-Controller-PIC18f4580-\4.Interfacing with Displays\7 segment display\main.c
60E text0 CODE >24:D:\Micro_controllers\PIC18F4580\Micro-Controller-PIC18f4580-\4.Interfacing with Displays\7 segment display\main.c
632 text0 CODE >25:D:\Micro_controllers\PIC18F4580\Micro-Controller-PIC18f4580-\4.Interfacing with Displays\7 segment display\main.c
63A text0 CODE >26:D:\Micro_controllers\PIC18F4580\Micro-Controller-PIC18f4580-\4.Interfacing with Displays\7 segment display\main.c
65E text0 CODE >27:D:\Micro_controllers\PIC18F4580\Micro-Controller-PIC18f4580-\4.Interfacing with Displays\7 segment display\main.c
66C text0 CODE >25:D:\Micro_controllers\PIC18F4580\Micro-Controller-PIC18f4580-\4.Interfacing with Displays\7 segment display\main.c
680 text0 CODE >23:D:\Micro_controllers\PIC18F4580\Micro-Controller-PIC18f4580-\4.Interfacing with Displays\7 segment display\main.c
786 cinit CODE >985:D:\Micro_controllers\PIC18F4580\Micro-Controller-PIC18f4580-\4.Interfacing with Displays\7 segment display\main.as
786 cinit CODE >987:D:\Micro_controllers\PIC18F4580\Micro-Controller-PIC18f4580-\4.Interfacing with Displays\7 segment display\main.as
786 cinit CODE >990:D:\Micro_controllers\PIC18F4580\Micro-Controller-PIC18f4580-\4.Interfacing with Displays\7 segment display\main.as
786 cinit CODE >1011:D:\Micro_controllers\PIC18F4580\Micro-Controller-PIC18f4580-\4.Interfacing with Displays\7 segment display\main.as
788 cinit CODE >1012:D:\Micro_controllers\PIC18F4580\Micro-Controller-PIC18f4580-\4.Interfacing with Displays\7 segment display\main.as
78A cinit CODE >1013:D:\Micro_controllers\PIC18F4580\Micro-Controller-PIC18f4580-\4.Interfacing with Displays\7 segment display\main.as
78C cinit CODE >1014:D:\Micro_controllers\PIC18F4580\Micro-Controller-PIC18f4580-\4.Interfacing with Displays\7 segment display\main.as
78E cinit CODE >1015:D:\Micro_controllers\PIC18F4580\Micro-Controller-PIC18f4580-\4.Interfacing with Displays\7 segment display\main.as
790 cinit CODE >1016:D:\Micro_controllers\PIC18F4580\Micro-Controller-PIC18f4580-\4.Interfacing with Displays\7 segment display\main.as
792 cinit CODE >1017:D:\Micro_controllers\PIC18F4580\Micro-Controller-PIC18f4580-\4.Interfacing with Displays\7 segment display\main.as
796 cinit CODE >1018:D:\Micro_controllers\PIC18F4580\Micro-Controller-PIC18f4580-\4.Interfacing with Displays\7 segment display\main.as
79A cinit CODE >1019:D:\Micro_controllers\PIC18F4580\Micro-Controller-PIC18f4580-\4.Interfacing with Displays\7 segment display\main.as
79A cinit CODE >1020:D:\Micro_controllers\PIC18F4580\Micro-Controller-PIC18f4580-\4.Interfacing with Displays\7 segment display\main.as
79C cinit CODE >1021:D:\Micro_controllers\PIC18F4580\Micro-Controller-PIC18f4580-\4.Interfacing with Displays\7 segment display\main.as
7A0 cinit CODE >1022:D:\Micro_controllers\PIC18F4580\Micro-Controller-PIC18f4580-\4.Interfacing with Displays\7 segment display\main.as
7A2 cinit CODE >1023:D:\Micro_controllers\PIC18F4580\Micro-Controller-PIC18f4580-\4.Interfacing with Displays\7 segment display\main.as
7A4 cinit CODE >1024:D:\Micro_controllers\PIC18F4580\Micro-Controller-PIC18f4580-\4.Interfacing with Displays\7 segment display\main.as
7A6 cinit CODE >1028:D:\Micro_controllers\PIC18F4580\Micro-Controller-PIC18f4580-\4.Interfacing with Displays\7 segment display\main.as
7A8 cinit CODE >1029:D:\Micro_controllers\PIC18F4580\Micro-Controller-PIC18f4580-\4.Interfacing with Displays\7 segment display\main.as
7AA cinit CODE >1035:D:\Micro_controllers\PIC18F4580\Micro-Controller-PIC18f4580-\4.Interfacing with Displays\7 segment display\main.as
7AA cinit CODE >1037:D:\Micro_controllers\PIC18F4580\Micro-Controller-PIC18f4580-\4.Interfacing with Displays\7 segment display\main.as
7AC cinit CODE >1038:D:\Micro_controllers\PIC18F4580\Micro-Controller-PIC18f4580-\4.Interfacing with Displays\7 segment display\main.as
$startup.obj
0 init CODE >104:D:\Micro_controllers\PIC18F4580\Micro-Controller-PIC18f4580-\4.Interfacing with Displays\7 segment display\startup.as
# %SYMTAB Section
# An enumeration of all symbols in the program.
# The beginning of the section is indicated by %SYMTAB.
# Each line describes a single symbol as follows:
#    <label> <value> [-]<load-adj> <class> <space> <psect> <file-name>
# The value and load-adj are both in unqualified hexadecimal.
# All other numeric values are in decimal.  The load-adj is the
# quantity one needs to add to the symbol value in order to obtain the load
# address of the symbol.  This value may be signed. If the symbol
# was defined in a psect then <psect> will be "-". File-name
# is the name of the object file in which the symbol was defined.
%SYMTAB
_i 1E 0 COMRAM 1 nvCOMRAM main.obj
_j 20 0 COMRAM 1 bssCOMRAM main.obj
___awdiv@counter 19 0 COMRAM 1 cstackCOMRAM main.obj
__Lmediumconst 0 0 MEDIUMCONST 0 mediumconst main.obj
__Hspace_0 7C4 0 ABS 0 - main.obj
__Hspace_1 22 0 ABS 0 - main.obj
__Hspace_2 0 0 ABS 0 - main.obj
__Hspace_4 600002 0 ABS 0 - main.obj
__Hibigdata 0 0 CODE 0 ibigdata main.obj
__mediumconst 0 0 MEDIUMCONST 0 mediumconst startup.obj
__Heeprom_data 0 0 EEDATA 0 eeprom_data main.obj
__L__absolute__ 0 0 ABS 0 __absolute__ main.obj
__Lsmallconst 600 0 SMALLCONST 0 smallconst main.obj
___sp 0 0 STACK 2 stack startup.obj
_main 602 0 CODE 0 text0 main.obj
___stack_hi 0 0 STACK 2 stack startup.obj
___stack_lo 0 0 STACK 2 stack startup.obj
start 0 0 CODE 0 init startup.obj
__HbssCOMRAM 0 0 ABS 0 bssCOMRAM main.obj
__Hpowerup 0 0 CODE 0 powerup main.obj
___awmod@sign 1A 0 COMRAM 1 cstackCOMRAM main.obj
__LnvCOMRAM 0 0 ABS 0 nvCOMRAM main.obj
__HdataCOMRAM 0 0 ABS 0 dataCOMRAM main.obj
__accesstop 60 0 ABS 0 - startup.obj
intlevel0 0 0 CODE 0 text startup.obj
intlevel1 0 0 CODE 0 text startup.obj
intlevel2 0 0 CODE 0 text startup.obj
intlevel3 0 0 CODE 0 text startup.obj
__LbssCOMRAM 0 0 ABS 0 bssCOMRAM main.obj
__LnvFARRAM 0 0 FARRAM 0 nvFARRAM main.obj
__Hifardata 0 0 CODE 0 ifardata main.obj
___awdiv@sign 1A 0 COMRAM 1 cstackCOMRAM main.obj
__Hclrtext 0 0 ABS 0 clrtext main.obj
__pidataCOMRAM 7B0 0 CODE 0 idataCOMRAM main.obj
___awdiv@dividend 15 0 COMRAM 1 cstackCOMRAM main.obj
___inthi_sp 0 0 STACK 2 stack startup.obj
___intlo_sp 0 0 STACK 2 stack startup.obj
__LdataCOMRAM 0 0 ABS 0 dataCOMRAM main.obj
__Hintcode_body 0 0 ABS 0 intcode_body main.obj
__Lintsave_regs 0 0 BIGRAM 1 intsave_regs main.obj
__Hmediumconst 0 0 MEDIUMCONST 0 mediumconst main.obj
__Hintcodelo 0 0 CODE 0 intcodelo main.obj
___awdiv@divisor 17 0 COMRAM 1 cstackCOMRAM main.obj
__end_of___awdiv 718 0 CODE 0 text2 main.obj
__end_of___awmod 786 0 CODE 0 text1 main.obj
__LidataCOMRAM 0 0 ABS 0 idataCOMRAM main.obj
__HnvCOMRAM 0 0 ABS 0 nvCOMRAM main.obj
__Lintcodelo 0 0 CODE 0 intcodelo main.obj
start_initialization 786 0 CODE 0 cinit main.obj
_seven_segment 1 0 COMRAM 1 dataCOMRAM main.obj
__HnvFARRAM 0 0 FARRAM 0 nvFARRAM main.obj
___rparam_used 1 0 ABS 0 - main.obj
isa$xinst 0 0 ABS 0 - startup.obj
__Hbank0 0 0 ABS 0 bank0 main.obj
__Hbank1 0 0 ABS 0 bank1 main.obj
__Hbank2 0 0 ABS 0 bank2 main.obj
__Hbank3 0 0 ABS 0 bank3 main.obj
__Hbank4 0 0 ABS 0 bank4 main.obj
__Hbank5 0 0 ABS 0 bank5 main.obj
__Hcinit 0 0 ABS 0 cinit main.obj
__Hconst 0 0 CONST 0 const main.obj
__Hidata 0 0 CODE 0 idata main.obj
__Hidloc 0 0 ABS 0 idloc main.obj
__Hnvbit 0 0 COMRAM 1 nvbit main.obj
__Hparam 0 0 COMRAM 1 rparam main.obj
__Hrdata 0 0 COMRAM 1 rdata main.obj
__Hstack 0 0 STACK 2 stack main.obj
__Htext0 0 0 ABS 0 text0 main.obj
__Htext1 0 0 ABS 0 text1 main.obj
__Htext2 0 0 ABS 0 text2 main.obj
__Hbigbss 0 0 BIGRAM 1 bigbss main.obj
__Hbigram 0 0 ABS 0 bigram main.obj
__Hbigsfr 0 0 ABS 0 bigsfr main.obj
__smallconst 600 0 SMALLCONST 0 smallconst startup.obj
__Hcomram 0 0 ABS 0 comram main.obj
__Hconfig 300002 0 CONFIG 4 config main.obj
__Lbank0 0 0 ABS 0 bank0 main.obj
__Lbank1 0 0 ABS 0 bank1 main.obj
__Lbank2 0 0 ABS 0 bank2 main.obj
__Lbank3 0 0 ABS 0 bank3 main.obj
__Lbank4 0 0 ABS 0 bank4 main.obj
__Lbank5 0 0 ABS 0 bank5 main.obj
__Lcinit 0 0 ABS 0 cinit main.obj
__Lconst 0 0 CONST 0 const main.obj
__Lidata 0 0 CODE 0 idata main.obj
__Lidloc 0 0 ABS 0 idloc main.obj
__Lnvbit 0 0 COMRAM 1 nvbit main.obj
__Lparam 0 0 COMRAM 1 rparam main.obj
__Lrdata 0 0 COMRAM 1 rdata main.obj
__Lstack 0 0 STACK 2 stack main.obj
__Ltext0 0 0 ABS 0 text0 main.obj
__Ltext1 0 0 ABS 0 text1 main.obj
__Ltext2 0 0 ABS 0 text2 main.obj
__Hfarbss 0 0 FARRAM 0 farbss main.obj
__Lintcode_body 0 0 ABS 0 intcode_body main.obj
__Habs1 0 0 ABS 0 abs1 main.obj
__Hdata 0 0 ABS 0 data main.obj
__Hheap 0 0 HEAP 7 heap main.obj
__Hinit 4 0 CODE 0 init main.obj
__Hrbit 0 0 COMRAM 1 rbit main.obj
__Hrbss 0 0 COMRAM 1 rbss main.obj
__Htemp 0 0 COMRAM 1 temp main.obj
__Htext 0 0 ABS 0 text main.obj
__Labs1 0 0 ABS 0 abs1 main.obj
__Ldata 0 0 ABS 0 data main.obj
__Lheap 0 0 HEAP 7 heap main.obj
__Linit 0 0 CODE 0 init main.obj
__Lrbit 0 0 COMRAM 1 rbit main.obj
__Lrbss 0 0 COMRAM 1 rbss main.obj
__Ltemp 0 0 COMRAM 1 temp main.obj
__Ltext 0 0 ABS 0 text main.obj
__HcstackCOMRAM 0 0 ABS 0 cstackCOMRAM main.obj
__Hintret 0 0 ABS 0 intret main.obj
__Hirdata 0 0 CODE 0 irdata main.obj
__S0 7C4 0 ABS 0 - main.obj
__S1 22 0 ABS 0 - main.obj
__S4 0 0 ABS 0 - main.obj
__S5 0 0 ABS 0 - main.obj
__pnvCOMRAM 1E 0 COMRAM 1 nvCOMRAM main.obj
__HidataCOMRAM 0 0 ABS 0 idataCOMRAM main.obj
__Lbigdata 0 0 BIGRAM 1 bigdata main.obj
__Hnvrram 0 0 COMRAM 1 nvrram main.obj
__Lintentry 0 0 ABS 0 intentry main.obj
__Hramtop 600 0 RAM 0 ramtop main.obj
__Hrparam 0 0 COMRAM 1 rparam main.obj
__activetblptr 0 0 ABS 0 - main.obj
__Hstruct 0 0 COMRAM 1 struct main.obj
___awmod@counter 19 0 COMRAM 1 cstackCOMRAM main.obj
___awdiv 696 0 CODE 0 text2 main.obj
___awmod 718 0 CODE 0 text1 main.obj
__Lbigbss 0 0 BIGRAM 1 bigbss main.obj
__Lbigram 0 0 ABS 0 bigram main.obj
__Lbigsfr 0 0 ABS 0 bigsfr main.obj
__Lcomram 0 0 ABS 0 comram main.obj
__Lconfig 0 0 CONFIG 4 config main.obj
__Lsivt_hi 0 0 CODE 0 sivt_hi main.obj
__Lsivt_lo 0 0 CODE 0 sivt_lo main.obj
__Lfarbss 0 0 FARRAM 0 farbss main.obj
___inthi_stack_hi 0 0 STACK 2 stack startup.obj
___inthi_stack_lo 0 0 STACK 2 stack startup.obj
__Lfardata 0 0 FARRAM 0 fardata main.obj
isa$std 1 0 ABS 0 - startup.obj
stackhi 0 0 ABS 0 - startup.obj
stacklo 0 0 ABS 0 - startup.obj
__Lintcode 0 0 CODE 0 intcode main.obj
__Lintret 0 0 ABS 0 intret main.obj
__Lirdata 0 0 CODE 0 irdata main.obj
__Lspace_0 0 0 ABS 0 - main.obj
__Lspace_1 0 0 ABS 0 - main.obj
__Lspace_2 0 0 ABS 0 - main.obj
__Lspace_4 0 0 ABS 0 - main.obj
__pbssCOMRAM 20 0 COMRAM 1 bssCOMRAM main.obj
__LcstackCOMRAM 0 0 ABS 0 cstackCOMRAM main.obj
end_of_initialization 7AA 0 CODE 0 cinit main.obj
__Lnvrram 0 0 COMRAM 1 nvrram main.obj
__Hintentry 0 0 ABS 0 intentry main.obj
___awdiv@quotient 1B 0 COMRAM 1 cstackCOMRAM main.obj
?___awdiv 15 0 COMRAM 1 cstackCOMRAM main.obj
?___awmod 15 0 COMRAM 1 cstackCOMRAM main.obj
__Hreset_vec 0 0 CODE 0 reset_vec main.obj
___awmod@dividend 15 0 COMRAM 1 cstackCOMRAM main.obj
__Lramtop 600 0 RAM 0 ramtop main.obj
__Lrparam 0 0 COMRAM 1 rparam main.obj
__pcinit 786 0 CODE 0 cinit main.obj
__ptext0 602 0 CODE 0 text0 main.obj
__ptext1 718 0 CODE 0 text1 main.obj
__ptext2 696 0 CODE 0 text2 main.obj
__Lstruct 0 0 COMRAM 1 struct main.obj
__ramtop 600 0 RAM 0 ramtop startup.obj
__Lpowerup 0 0 CODE 0 powerup main.obj
__Leeprom_data 0 0 EEDATA 0 eeprom_data main.obj
__H__absolute__ 0 0 ABS 0 __absolute__ main.obj
__psmallconst 600 0 SMALLCONST 0 smallconst main.obj
__Lreset_vec 0 0 CODE 0 reset_vec main.obj
___heap_hi 0 0 ABS 0 - startup.obj
___heap_lo 0 0 ABS 0 - startup.obj
___param_bank 0 0 ABS 0 - main.obj
___intlo_stack_hi 0 0 STACK 2 stack startup.obj
___intlo_stack_lo 0 0 STACK 2 stack startup.obj
__Hbigdata 0 0 BIGRAM 1 bigdata main.obj
__end_of__initialization 7AA 0 CODE 0 cinit main.obj
___awmod@divisor 17 0 COMRAM 1 cstackCOMRAM main.obj
__Libigdata 0 0 CODE 0 ibigdata main.obj
__Lclrtext 0 0 ABS 0 clrtext main.obj
__pcstackCOMRAM 15 0 COMRAM 1 cstackCOMRAM main.obj
__end_of_main 696 0 CODE 0 text0 main.obj
_PORTC F82 0 ABS 0 - main.obj
_PORTD F83 0 ABS 0 - main.obj
_TRISC F94 0 ABS 0 - main.obj
_TRISD F95 0 ABS 0 - main.obj
__HRAM 0 0 ABS 0 - main.obj
__Hbss 0 0 RAM 1 bss main.obj
__Hram 0 0 ABS 0 ram main.obj
__Hsfr 0 0 ABS 0 sfr main.obj
__LRAM 1 0 ABS 0 - main.obj
__Lbss 0 0 RAM 1 bss main.obj
__Lram 0 0 ABS 0 ram main.obj
__Lsfr 0 0 ABS 0 sfr main.obj
__Hsivt_hi 0 0 CODE 0 sivt_hi main.obj
__Hsivt_lo 0 0 CODE 0 sivt_lo main.obj
__initialization 786 0 CODE 0 cinit main.obj
__pdataCOMRAM 1 0 COMRAM 1 dataCOMRAM main.obj
__Hfardata 0 0 FARRAM 0 fardata main.obj
__Hsmallconst 602 0 SMALLCONST 0 smallconst main.obj
__Lifardata 0 0 CODE 0 ifardata main.obj
__Hintsave_regs 0 0 BIGRAM 1 intsave_regs main.obj
__Hintcode 0 0 CODE 0 intcode main.obj
# %SPLITSTAB Section
# This section enumerates all the psect splits performed by the assembler.
# The beginning of the section is indicated by %SPLITSTAB.
# Each line is a record a particular split, where the parent psect is on
# the left and the child on the right.  Note that a child psect is always
# split form the top of the parent psect. All splits from a given parent
# are listed in the order in which they occurred.
%SPLITSTAB
# %DABS Section
# This section contains a table of all usuage of the assember
# directive DABS in the program. Each line has the following format:
#   <name> <space> <address> <size>
# If the DABS was originally labelled then that shall be <name>,
# otherwise name will be "-".  The <space> number is in decimal.
# <address> and <size> are in byte units as unqaulified hexadecimal
%DABS
# %SEGMENTS Section
# This sections enumerates the segments of the program.  Each segment
# is described on a single line as follows:
#    <name> <space> <link address> <file address> <size> <delta>
# Addresses and size are in unqualified hexadecimal.  The link address
# and size are in units of delta. The file address is in units of bytes.
# All other numeric quantities are in decimal.
%SEGMENTS
text0 0 602 602 1C2 1
reset_vec 0 0 0 4 1
smallconst 0 600 600 2 1
dataCOMRAM 1 1 1 21 1
# %NOTES Section
# This section contains data of all the note-psects.  The beginning of the section
# is indicated by %NOTES. The first line indicates the name and decimal
# byte-length of the first note-psect, e.g.
#   $codecov_info_hdr 16
# Each line that follows contains the byte-data of the psect in hexadecimal as a
# space-separated list. These lines are limited to 16 bytes of data.
%NOTES
